{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst elements = {\n  inputEl: document.getElementById('datetime-picker'),\n  showDays: document.querySelector('span[data-days]'),\n  showHours: document.querySelector('span[data-hours]'),\n  showMinutes: document.querySelector('span[data-minutes]'),\n  showSeconds: document.querySelector('span[data-seconds]'),\n  startBtn: document.querySelector('button[data-start]'),\n};\n\nelements.startBtn.disabled = true;\n\nlet userSelectedDate;\nlet intervalTime;\nlet intervalId;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    intervalTime = userSelectedDate - Date.now();\n    if (intervalTime < 1) {\n      iziToast.error({\n        color: 'red',\n        position: 'topRight',\n        message: `Please choose a date in the future`,\n      });\n      elements.startBtn.disabled = true;\n      return;\n    } else {\n      elements.startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(elements.inputEl, options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nelements.startBtn.addEventListener('click', handleStart);\nfunction handleStart(event) {\n  elements.startBtn.disabled = true;\n  elements.inputEl.disabled = true;\n\n  intervalId = setInterval(() => {\n    intervalTime = userSelectedDate - Date.now();\n    const showTime = convertMs(intervalTime);\n    elements.showDays.textContent = showTime.days.toString().padStart(2, 0);\n    elements.showHours.textContent = showTime.hours.toString().padStart(2, 0);\n    elements.showMinutes.textContent = showTime.minutes\n      .toString()\n      .padStart(2, 0);\n    elements.showSeconds.textContent = showTime.seconds\n      .toString()\n      .padStart(2, 0);\n\n    if (intervalTime < 1000) {\n      clearInterval(intervalId);\n      elements.inputEl.disabled = false;\n    }\n  }, 1000);\n}"],"names":["elements","userSelectedDate","intervalTime","intervalId","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","handleStart","event","showTime"],"mappings":"2GAKA,MAAMA,EAAW,CACf,QAAS,SAAS,eAAe,iBAAiB,EAClD,SAAU,SAAS,cAAc,iBAAiB,EAClD,UAAW,SAAS,cAAc,kBAAkB,EACpD,YAAa,SAAS,cAAc,oBAAoB,EACxD,YAAa,SAAS,cAAc,oBAAoB,EACxD,SAAU,SAAS,cAAc,oBAAoB,CACvD,EAEAA,EAAS,SAAS,SAAW,GAE7B,IAAIC,EACAC,EACAC,EACJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAGrB,GAFAJ,EAAmBI,EAAc,CAAC,EAClCH,EAAeD,EAAmB,KAAK,MACnCC,EAAe,EAAG,CACpBI,EAAS,MAAM,CACb,MAAO,MACP,SAAU,WACV,QAAS,oCACjB,CAAO,EACDN,EAAS,SAAS,SAAW,GAC7B,MACN,MACMA,EAAS,SAAS,SAAW,EAEhC,CACH,EAEAO,EAAUP,EAAS,QAASI,CAAO,EAEnC,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAb,EAAS,SAAS,iBAAiB,QAASc,CAAW,EACvD,SAASA,EAAYC,EAAO,CAC1Bf,EAAS,SAAS,SAAW,GAC7BA,EAAS,QAAQ,SAAW,GAE5BG,EAAa,YAAY,IAAM,CAC7BD,EAAeD,EAAmB,KAAK,MACvC,MAAMe,EAAWR,EAAUN,CAAY,EACvCF,EAAS,SAAS,YAAcgB,EAAS,KAAK,SAAQ,EAAG,SAAS,EAAG,CAAC,EACtEhB,EAAS,UAAU,YAAcgB,EAAS,MAAM,SAAQ,EAAG,SAAS,EAAG,CAAC,EACxEhB,EAAS,YAAY,YAAcgB,EAAS,QACzC,SAAU,EACV,SAAS,EAAG,CAAC,EAChBhB,EAAS,YAAY,YAAcgB,EAAS,QACzC,SAAU,EACV,SAAS,EAAG,CAAC,EAEZd,EAAe,MACjB,cAAcC,CAAU,EACxBH,EAAS,QAAQ,SAAW,GAE/B,EAAE,GAAI,CACT"}